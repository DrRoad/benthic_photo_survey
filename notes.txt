Camera setup:

Make sure the cameras date and time are correctly set to local time before taking photos. On the Panasonic Lumix DMC-TS4, you have to take it out of iA mode (put it in P mode for example), go to the settings menu, and turn on Auto Clock Set. This should sync the camera's clock with the gps time. If you're using a different camera, you just have to make sure the camera's clock is set to the correct local time within a few seconds.


Notes on specific libraries used:
pyexiv2 appears to be a complete pain in the butt to install on mac so I may try and convert to pexif at some point (http://http://code.google.com/p/pexif/) for now, I'm going to keep using pyexiv2. pexif may not currently support very many cameras (including Panasonic) so it won't do it. There are some instructions for installing pyexiv2 on mac here: https://gist.github.com/819680. I finally got pyexiv2 to work on the mac by following directions here: http://www.leancrew.com/all-this/2011/10/homebrew-and-pyexiv2/  They're pretty much the same as the other directions excluding the install_name_tool command.

GDAL: Caused me a lot of trouble on Ubuntu because I had stupidly built from source at some point without expat support necessary for reading GPX files with OGR. I had to manually delete the executable files and the libraries. Once I'd gotten that sorted, I used the Ubuntu software center with this repository: https://launchpad.net/~ubuntugis/+archive/ubuntugis-unstable  It has almost all of the GIS software that I had struggled to install.

Matplotlib: I started with 1.0.1 (which I found binaries for somewhere) but it turns out there's a bug in 1.0.1 that was preventing the proper handling of timezones in plot_date so I needed 1.1.1. It wasn't too hard to deal with. I ran 'sudo apt-get build-dep matplotlib' to take care of the dependencies. Then I downloaded the source for 1.1.1 and followed the install instructions for build from source (http://matplotlib.org/users/installing.html).

Notes on precision:
1 minute of Latitude is about 1.8 km and 0.001 minutes is about 1.8 meters. I'm now storing at the maximum precision of the Exif format (or at least at the max of what pyexiv2 can write) which is 1 e -7 of a second. That should be plenty. Just for reference, 1 second of latitude is about 30 meters.
